#Bindings generator config

# global bindings settings
[global]
#target directory containing header files to parse
TargetDirectory = ../../include/polycode/core
#include path prefix used when including the header files from generated headers (i.e. bar for #include "bar/Foo.h")
HeaderIncludeDirectory = polycode/core
#comma separated list of header files without extensions to ignore (i.e. Foo for Foo.h)
IgnoreFiles = PolyTween, PolyTweenManager, PolyGLSLProgram, PolyGLSLShader, PolyGLSLShaderModule, PolyWinCore, PolyEmscriptenCore, PolyIOSCore, PolyRPICore, PolyUWPCore, PolyCocoaCore, PolyAGLCore, PolySDLCore, Poly_iPhone, PolyGLES1Renderer, PolyGLRenderer, tinyxml, tinystr, OpenGLCubemap, PolyiPhoneCore, PolyGLES1Texture, PolyGLTexture, PolyGLVertexBuffer, PolyThreaded, PolyGLHeaders, GLee, PolyPeer, PolySocket, PolyClient, PolyServer, PolyServerWorld, OSFILE, OSFileEntry, OSBasics, PolyLogger, PolyFontGlyphSheet, PolyXAudio2AudioInterface, PolyAndroidCore, PolyOpenSLAudioInterface, PolyAAssetFileProvider, PolySDLAudioInterface
#comma separated list of non-standard symbols to strip that might affect header parsing (i.e. __declspec(dllexport))
StripSymbols = _PolyExport
#comma separated list of classes to ignore when parsing (i.e. CFoo, CBar)
IgnoreClasses = PAAudioInterface, AudioInterface, ResourceLoader, CoreFile, CoreFileProvider, GraphicsInterface, Script, LuaScript, JSScript, Object, Threaded, OpenGLCubemap, PolyBase, Matrix4::union, BasicFile, BasicFileProvider, Cubemap, OpenGLGraphicsInterface, PhysFSFile, PhysFSFileProvider, TimerManager, VertexDataArray, IndexDataArray, CoreMutex, LuaScriptInstance, JSScriptInstance,AAssetFile, AAssetFileProvider, BinaryObjectReader, BinaryObjectWriter, QuaternionCurve
#comma separated list of class methods to ignore
IgnoreMethods = readByte32, readByte16, getCustomEntitiesByType, Core, Renderer, Shader, Texture, handleEvent, secondaryHandler, getSTLString, readInt, CoreServices
#main library name
LibraryName = Polycode
#comma separated list of classes that will not be garbage collected by scripting language(Foo, Bar)
DisableGarbageCollection = Entity,SceneLabel, SceneMesh, Scene, Texture, Image, Camera, SceneParticleEmitter, Mesh, Vertex, Polygon, Polycode::Polygon, Material, ScenePrimitive, SceneLine, SceneLight, SceneSound, SceneImage, SceneEntity, SceneEntityInstance, SceneSprite
#name of default module to inerit parent classes from
DefaultModule = Polycode
#comma separated list of classes that must be included from the same module as the one the bindings are generated for, otherwise defaulting to DefaultModule
InheritInModule = PhysicsGenericConstraint, PhysicsHingeConstraint, PhysicsPointToPointConstraint, PhysicsConstraint, PhysicsEntity, CollisionScene, CollisionEntity, UIElement, UIWindow, UIMenuItem, UIImage, UIRect

#settings for the lua bindings generator
[lua]
#template file for the lua wrappers header file
WrapperMainHeaderTemplate = templates/lua_header.h
#target header file the wrappers will be written to
WrapperMainHeaderTarget = ../../include/polycode/bindings/lua/PolycodeLua.h
#template file for the lua wrappers header file
WrapperHeaderTemplate = templates/lua_wrappers.h
#target header file the wrappers will be written to
WrapperHeaderTarget = ../../include/polycode/bindings/lua/PolycodeLuaWrappers.h
#target source file template
WrapperSourceTemplate = templates/lua_wrappers.cpp
#target source file the wrappers will be written to
WrapperSourceTarget = ../../src/bindings/lua/PolycodeLua.cpp
#directory where Lua files will be written to
LuaApiDirectory = ../../bindings/lua

[js]
#directory where Javascript files will be written to
JSApiDirectory = ../../bindings/javascript
#template file for the lua wrappers header file
WrapperMainHeaderTemplate = templates/js_header.h
#target header file the wrappers will be written to
WrapperMainHeaderTarget = ../../include/polycode/bindings/javascript/PolycodeJS.h
#template file for the lua wrappers header file
WrapperHeaderTemplate = templates/js_wrappers.h
#target header file the wrappers will be written to
WrapperHeaderTarget = ../../include/polycode/bindings/javascript/PolycodeJSWrappers.h
#target source file template
WrapperSourceTemplate = templates/js_wrappers.cpp
#target source file the wrappers will be written to
WrapperSourceTarget = ../../src/bindings/javascript/PolycodeJS.cpp
